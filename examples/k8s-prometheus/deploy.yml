apiVersion: v1
kind: Namespace
metadata:
  name: kubescape
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: kubescape
  name: kubescape
  namespace: kubescape
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubescape-clusterroles
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["get", "list", "describe"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubescape-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubescape-clusterroles
subjects:
- kind: ServiceAccount
  name: kubescape
  namespace: kubescape
---
# todo
# Needs appropriate networkpolicies to avoid shouting about itself
---
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: kubescape
  namespace: kubescape
  labels:
    app: kubescape
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubescape
  template:
    metadata:
      labels:
        app: kubescape
    spec:
      serviceAccount: kubescape
      containers:
        - name: kubescape
          image: joibel/kubescape
          imagePullPolicy: Always
          ports:
          - containerPort: 80
            name: http
          command: ["kubescape"]
          args: ["metrics"]
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 80
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 500m
              memory: 500Mi
            limits:
              cpu: 500m
              memory: 500Mi
---
apiVersion: v1
kind: Service
metadata:
  name: kubescape
  namespace: kubescape
  labels:
    app: kubescape
spec:
  type: ClusterIP
  selector:
    app: kubescape
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/name: kubescape
  name: kubescape
  namespace: kubescape
spec:
  endpoints:
  - interval: 60s
    path: /metrics?framework=nsa
    scrapeTimeout: 60s
    targetPort: 80
  jobLabel: kubescape
  namespaceSelector:
    matchNames:
    - kubescape
  selector:
    matchLabels:
      app: kubescape
---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  labels:
    app.kubernetes.io/name: kubescape
  name: kubescape
  namespace: kubescape
spec:
  jobLabel: kubescape
  namespaceSelector:
    matchNames:
    - kubescape
  podMetricsEndpoints:
  - interval: 60s
    path: /metrics?framework=nsa
    port: http
  selector:
    matchLabels:
      app: kubescape
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: kubescape-rules
  namespace: kubescape
spec:
  groups:
  - name: kubescape.rules
    rules:
    - alert: kubescapeFailedObject
      annotations:
        description: |-
          {{ $labels.name }} in namespace {{ $labels.namespace }} failed the {{ $labels.control }} control in the {{ $labels.framework }} Kubescape framework
        summary: Kubescape framework violation
      expr: count by(framework,control,namespace,name) kubescape_object_failed_count > 0
      labels:
        severity: warn
    - alert: kubescapeResourcesFound
      annotations:
        description: |-
          {{ $value }} violations for Control {{ $labels.control }} in the {{ $labels.framework }} Kubescape framework
        summary: Kubescape framework violation
      expr: count by(framework,control) kubescape_resources_found_count > 0
      labels:
        severity: warn